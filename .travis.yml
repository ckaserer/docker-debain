language: bash

sudo: required
dist: trusty

services:
- docker

env:
- QEMU_VERSION='2.6.0' REPO='debian' TAG='latest' 

- QEMU_VERSION='2.6.0' REPO='debian' TAG='experimental'

- QEMU_VERSION='2.6.0' REPO='debian' TAG='stable'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='stable-backports'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='stable-slim'

- QEMU_VERSION='2.6.0' REPO='debian' TAG='stretch'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='9.4'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='9'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='latest'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='stretch-backports'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='stretch-slim'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='9.4-slim'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='9-slim'

- QEMU_VERSION='2.6.0' REPO='debian' TAG='jessie'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='8.10'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='8'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='jessie-backports'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='jessie-slim'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='8.10-slim'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='8-slim'

- QEMU_VERSION='2.6.0' REPO='debian' TAG='wheezy'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='7.11'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='7'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='wheezy-backports'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='wheezy-slim'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='7.11-slim'
- QEMU_VERSION='2.6.0' REPO='debian' TAG='7-slim'


script:
# prepare qemu
- docker run --rm --privileged multiarch/qemu-user-static:register --reset

# get qemu-arm-static binary
- mkdir tmp
- >
  pushd tmp &&
  curl -L -o qemu-arm-static.tar.gz https://github.com/multiarch/qemu-user-static/releases/download/v${QEMU_VERSION}/qemu-arm-static.tar.gz &&
  tar xzf qemu-arm-static.tar.gz &&
  popd
# Replace debian version with travis env variable
- sed -i "s/latest/${TAG}/g" Dockerfile
# build image
- docker build -t ${DOCKER_USER}/${REPO}:${TAG} .
# test image
- docker run ${DOCKER_USER}/${REPO}:${TAG} uname -a
# push image
- >
  if [ "$TRAVIS_BRANCH" == "master" ]; then
    echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
    docker push ${DOCKER_USER}/${REPO}
  fi

after_script:
- "curl -X POST https://hooks.microbadger.com/images/${DOCKER_USER}/${REPO}/XcpI7oGhsbekx8Z-ck-gIuu3Zd0="